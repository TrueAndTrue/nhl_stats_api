from django.db import models
import uuid

# make names snake case
class Goal(models.Model):
  id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
  shot_type = models.CharField(max_length=255, null=True)
  period = models.IntegerField(null=True)
  period_time = models.TimeField(null=True)
  scorer = models.CharField(max_length=255, null=True)
  assist = models.CharField(max_length=255, null=True)
  assist2 = models.CharField(max_length=255, null=True)
  goalie = models.CharField(max_length=255, null=True)
  season_type = models.CharField(max_length=255, null=True)
  coord_x = models.IntegerField(null=True)
  coord_y = models.IntegerField(null=True)
  game_id = models.IntegerField()
  event_id = models.CharField(unique=True, default=-1)

class Hit(models.Model):
  id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
  hitter = models.CharField(max_length=255, null=True)
  hittee = models.CharField(max_length=255, null=True)
  period = models.IntegerField(null=True)
  period_time = models.TimeField(null=True)
  season_type = models.CharField(max_length=255, null=True)
  coord_x = models.IntegerField(null=True)
  coord_y = models.IntegerField(null=True)
  game_id = models.IntegerField()
  event_id = models.CharField(unique=True, default=-1)

class Faceoff(models.Model):
  id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
  winner = models.CharField(max_length=255, null=True)
  loser = models.CharField(max_length=255, null=True)
  period = models.IntegerField(null=True)
  period_time = models.TimeField(null=True)
  season_type = models.CharField(max_length=255, null=True)
  coord_x = models.IntegerField(null=True)
  coord_y = models.IntegerField(null=True)
  game_id = models.IntegerField()
  event_id = models.CharField(unique=True, default=-1)

class Shot(models.Model):
  id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
  shooter = models.CharField(max_length=255, null=True)
  goalie = models.CharField(max_length=255, null=True)
  shot_type = models.CharField(max_length=255, null=True)
  period = models.IntegerField(null=True)
  period_time = models.TimeField(null=True)
  season_type = models.CharField(max_length=255, null=True)
  coord_x = models.IntegerField(null=True)
  coord_y = models.IntegerField(null=True)
  game_id = models.IntegerField()
  event_id = models.CharField(unique=True, default=-1)

class Giveaway(models.Model):
  id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
  player = models.CharField(max_length=255, null=True)
  period = models.IntegerField(null=True)
  period_time = models.TimeField(null=True)
  season_type = models.CharField(max_length=255, null=True)
  coord_x = models.IntegerField(null=True)
  coord_y = models.IntegerField(null=True)
  game_id = models.IntegerField()
  event_id = models.CharField(unique=True, default=-1)

class Penalty(models.Model):
  id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
  penalty_on = models.CharField(max_length=255, null=True)
  drew_by = models.CharField(max_length=255, null=True)
  penalty_type = models.CharField(max_length=255, null=True)
  minutes = models.IntegerField(null=True)
  period = models.IntegerField(null=True)
  period_time = models.TimeField(null=True)
  season_type = models.CharField(max_length=255, null=True)
  coord_x = models.IntegerField(null=True)
  coord_y = models.IntegerField(null=True)
  game_id = models.IntegerField()
  event_id = models.CharField(unique=True, default=-1)

class BlockedShot(models.Model):
  id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
  blocker = models.CharField(max_length=255, null=True)
  shooter = models.CharField(max_length=255, null=True)
  period = models.IntegerField(null=True)
  period_time = models.TimeField(null=True)
  season_type = models.CharField(max_length=255, null=True)
  coord_x = models.IntegerField(null=True)
  coord_y = models.IntegerField(null=True)
  game_id = models.IntegerField()
  event_id = models.CharField(unique=True, default=-1)

class MissedShot(models.Model):
  id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
  shooter = models.CharField(max_length=255, null=True)
  goalie = models.CharField(max_length=255, null=True)
  reason = models.CharField(max_length=255, null=True)
  period = models.IntegerField(null=True)
  period_time = models.TimeField(null=True)
  season_type = models.CharField(max_length=255, null=True)
  coord_x = models.IntegerField(null=True)
  coord_y = models.IntegerField(null=True)
  game_id = models.IntegerField()
  event_id = models.CharField(unique=True, default=-1)